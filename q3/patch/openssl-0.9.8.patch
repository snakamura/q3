diff -ur openssl-0.9.8.orig/crypto/cryptlib.c openssl-0.9.8/crypto/cryptlib.c
--- openssl-0.9.8.orig/crypto/cryptlib.c	2005-07-05 08:24:11.000000000 +0900
+++ openssl-0.9.8/crypto/cryptlib.c	2005-07-24 18:26:50.356791500 +0900
@@ -576,7 +576,7 @@
 void OPENSSL_cpuid_setup(void) {}
 #endif
 
-#if (defined(_WIN32) || defined(__CYGWIN__)) && defined(_WINDLL)
+#if (defined(_WIN32) || defined(__CYGWIN__)) && defined(_WINDLL) && !defined(OPENSSL_SYS_WINCE)
 #ifdef __CYGWIN__
 /* pick DLL_[PROCESS|THREAD]_[ATTACH|DETACH] definitions */
 #include <windows.h>
@@ -620,7 +620,7 @@
 	}
 #endif
 
-#if defined(_WIN32) && !defined(__CYGWIN__)
+#if defined(_WIN32) && !defined(__CYGWIN__) && !defined(OPENSSL_SYS_WINCE)
 #include <tchar.h>
 
 #if defined(_WIN32_WINNT) && _WIN32_WINNT>=0x0333
diff -ur openssl-0.9.8.orig/crypto/dso/dso_win32.c openssl-0.9.8/crypto/dso/dso_win32.c
--- openssl-0.9.8.orig/crypto/dso/dso_win32.c	2005-06-28 06:21:12.000000000 +0900
+++ openssl-0.9.8/crypto/dso/dso_win32.c	2005-07-24 17:49:33.322970400 +0900
@@ -140,13 +140,33 @@
 	HINSTANCE h = NULL, *p = NULL;
 	/* See applicable comments from dso_dl.c */
 	char *filename = DSO_convert_filename(dso, NULL);
+#ifdef OPENSSL_SYS_WINCE
+	size_t i,len_0;
+	TCHAR *wfilename = NULL;
+#endif
 
 	if(filename == NULL)
 		{
 		DSOerr(DSO_F_WIN32_LOAD,DSO_R_NO_FILENAME);
 		goto err;
 		}
+#ifdef OPENSSL_SYS_WINCE
+	len_0 = strlen(filename)+1;
+	wfilename = (TCHAR *)OPENSSL_malloc(len_0);
+	if(wfilename == NULL)
+		{
+		DSOerr(DSO_F_WIN32_LOAD,ERR_R_MALLOC_FAILURE);
+		goto err;
+		}
+#ifndef OPENSSL_NO_MULTIBYTE
+	if(!MultiByteToWideChar(CP_ACP, 0, filename, -1, wfilename, len_0))
+#endif
+		for (i=0;i<len_0;i++) wfilename[i]=(TCHAR)filename[i];
+	h = LoadLibrary(wfilename);
+	OPENSSL_free(wfilename);
+#else
 	h = LoadLibraryA(filename);
+#endif
 	if(h == NULL)
 		{
 		DSOerr(DSO_F_WIN32_LOAD,DSO_R_LOAD_FAILED);
@@ -213,7 +233,11 @@
 static void *win32_bind_var(DSO *dso, const char *symname)
 	{
 	HINSTANCE *ptr;
-	void *sym;
+	void *sym = NULL;
+#ifdef OPENSSL_SYS_WINCE
+	size_t i,len_0;
+	TCHAR *wsymname = NULL;
+#endif
 
 	if((dso == NULL) || (symname == NULL))
 		{
@@ -231,7 +255,23 @@
 		DSOerr(DSO_F_WIN32_BIND_VAR,DSO_R_NULL_HANDLE);
 		return(NULL);
 		}
+#ifdef OPENSSL_SYS_WINCE
+	len_0 = strlen(symname)+1;
+	wsymname = (TCHAR *)OPENSSL_malloc(len_0);
+	if(wsymname == NULL)
+		{
+		DSOerr(DSO_F_WIN32_BIND_VAR,ERR_R_MALLOC_FAILURE);
+		return(NULL);
+		}
+#ifndef OPENSSL_NO_MULTIBYTE
+	if(!MultiByteToWideChar(CP_ACP, 0, symname, -1, wsymname, len_0))
+#endif
+		for (i=0;i<len_0;i++) wsymname[i]=(TCHAR)symname[i];
+	sym = GetProcAddress(*ptr, wsymname);
+	OPENSSL_free(wsymname);
+#else
 	sym = GetProcAddress(*ptr, symname);
+#endif
 	if(sym == NULL)
 		{
 		DSOerr(DSO_F_WIN32_BIND_VAR,DSO_R_SYM_FAILURE);
@@ -244,7 +284,11 @@
 static DSO_FUNC_TYPE win32_bind_func(DSO *dso, const char *symname)
 	{
 	HINSTANCE *ptr;
-	void *sym;
+	void *sym = NULL;
+#ifdef OPENSSL_SYS_WINCE
+	size_t i,len_0;
+	TCHAR *wsymname = NULL;
+#endif
 
 	if((dso == NULL) || (symname == NULL))
 		{
@@ -262,7 +306,23 @@
 		DSOerr(DSO_F_WIN32_BIND_FUNC,DSO_R_NULL_HANDLE);
 		return(NULL);
 		}
+#ifdef OPENSSL_SYS_WINCE
+	len_0 = strlen(symname)+1;
+	wsymname = (TCHAR *)OPENSSL_malloc(len_0);
+	if(wsymname == NULL)
+		{
+		DSOerr(DSO_F_WIN32_BIND_VAR,ERR_R_MALLOC_FAILURE);
+		return(NULL);
+		}
+#ifndef OPENSSL_NO_MULTIBYTE
+	if(!MultiByteToWideChar(CP_ACP, 0, symname, -1, wsymname, len_0))
+#endif
+		for (i=0;i<len_0;i++) wsymname[i]=(TCHAR)symname[i];
+	sym = GetProcAddress(*ptr, wsymname);
+	OPENSSL_free(wsymname);
+#else
 	sym = GetProcAddress(*ptr, symname);
+#endif
 	if(sym == NULL)
 		{
 		DSOerr(DSO_F_WIN32_BIND_FUNC,DSO_R_SYM_FAILURE);
diff -ur openssl-0.9.8.orig/crypto/md2/md2test.c openssl-0.9.8/crypto/md2/md2test.c
--- openssl-0.9.8.orig/crypto/md2/md2test.c	2004-07-22 19:25:48.000000000 +0900
+++ openssl-0.9.8/crypto/md2/md2test.c	2005-07-24 18:36:04.522336500 +0900
@@ -128,6 +128,7 @@
     if (err) printf("ERROR: %d\n", err);
 #endif
 	EXIT(err);
+	return 0;
 	}
 
 static char *pt(unsigned char *md)
diff -ur openssl-0.9.8.orig/crypto/rand/rand_win.c openssl-0.9.8/crypto/rand/rand_win.c
--- openssl-0.9.8.orig/crypto/rand/rand_win.c	2005-05-21 22:19:45.000000000 +0900
+++ openssl-0.9.8/crypto/rand/rand_win.c	2005-07-24 18:26:16.360055500 +0900
@@ -193,12 +193,18 @@
 {
 	MEMORYSTATUS m;
 	HCRYPTPROV hProvider = 0;
+#if !defined OPENSSL_SYS_WINCE || WCEPLATFORM!=MS_HPC_PRO
 	BYTE buf[64];
+#endif
 	DWORD w;
+#ifndef OPENSSL_SYS_WINCE
 	HWND h;
+#endif
 	int good = 0;
 
+#ifndef OPENSSL_SYS_WINCE
 	HMODULE advapi, kernel, user, netapi;
+#endif
 	CRYPTACQUIRECONTEXTW acquire = 0;
 	CRYPTGENRANDOM gen = 0;
 	CRYPTRELEASECONTEXT release = 0;
@@ -632,8 +638,10 @@
 void RAND_screen(void) /* function available for backward compatibility */
 {
 	RAND_poll();
+#if !defined(OPENSSL_SYS_WINCE)
 	if (GetVersion() >= 0x80000000 || !OPENSSL_isservice())
 		readscreen();
+#endif
 }
 
 
diff -ur openssl-0.9.8.orig/ssl/ssltest.c openssl-0.9.8/ssl/ssltest.c
--- openssl-0.9.8.orig/ssl/ssltest.c	2005-06-28 22:27:53.000000000 +0900
+++ openssl-0.9.8/ssl/ssltest.c	2005-07-24 18:36:44.612237500 +0900
@@ -885,6 +885,7 @@
 	CRYPTO_mem_leaks(bio_err);
 	if (bio_err != NULL) BIO_free(bio_err);
 	EXIT(ret);
+	return 0;
 	}
 
 int doit_biopair(SSL *s_ssl, SSL *c_ssl, long count,
diff -ur openssl-0.9.8.orig/util/mk1mf.pl openssl-0.9.8/util/mk1mf.pl
--- openssl-0.9.8.orig/util/mk1mf.pl	2005-07-05 08:24:12.000000000 +0900
+++ openssl-0.9.8/util/mk1mf.pl	2005-07-24 17:47:14.437500000 +0900
@@ -122,16 +122,16 @@
 $NT=0;
 
 push(@INC,"util/pl","pl");
-if (($platform =~ /VC-(.+)/))
+if ($platform eq "VC-CE")
+	{
+	require 'VC-CE.pl';
+	}
+elsif (($platform =~ /VC-(.+)/))
 	{
 	$FLAVOR=$1;
 	$NT = 1 if $1 eq "NT";
 	require 'VC-32.pl';
 	}
-elsif ($platform eq "VC-CE")
-	{
-	require 'VC-CE.pl';
-	}
 elsif ($platform eq "Mingw32")
 	{
 	require 'Mingw32.pl';
